<?php

/**
 * @file taxonomy_export.pages.inc
 *  Menu callbacks for taxonomy_export.
 **/

module_load_include('inc', 'taxonomy_export');

/**
 * FAPI callback: Displays a form allowing the admin to choose which
 * vocabulary to export.
 **/
function taxonomy_export_export($form_state) {
  $form = array(
    '#redirect' => FALSE
  );

  $vocabularies = taxonomy_get_vocabularies();
  $options = array();
  foreach ($vocabularies as $vid => $vocabulary) {
    $options[$vid] = $vocabulary->name;
  }

  if ($form_state['storage']['taxonomy_export']) {
    $form['back'] = array(
      '#value' => l(t('<< Back, export more vocabularies'), 'admin/content/taxonomy/export'),
    );
    $form['taxonomy_export'] = array(
      '#type' => 'textarea',
      '#title' => t('Export data'),
      '#cols' => 80,
      '#rows' => 30,
      '#default_value' => $form_state['storage']['taxonomy_export'],
      '#attributes' => array('readonly' => 'readonly'),
    );
  }
  else {
    $form['vid'] = array(
      '#type' => 'radios',
      '#title' => t('Vocabulary to export'),
      '#default_value' => $form_state['values']['vid'] ? $form_state['values']['vid'] : key($options),
      '#options' => $options,
    );
    $form['include_terms'] = array(
      '#type' => 'checkbox',
      '#title' => t('Include Terms?'),
      '#default_value' => $form_state['values']['include_terms'] ? $form_state['values']['include_terms'] : FALSE,
      '#description' => t('By default only the vocabulary definition is exported, not the term data also.  <em>Warning, if you have a lot of terms this may generate a large export!</em>')
    );
    $form['as_file'] = array(
      '#type' => 'checkbox',
      '#title' => t('Save export as file?'),
      '#default_value' => $form_state['values']['as_file'] ? $form_state['values']['as_file'] : FALSE,
      '#description' => t('By default, exports are displayed in a text area for copying to the clipboard.')
    );
    $form['export'] = array(
      '#type' => 'submit',
      '#value' => t('Export'),
    );
  }

  return $form;
}

/**
 * FAPI submit handler for taxonomy_export_export().
 **/
function taxonomy_export_export_submit($form, &$form_state) {
  $export = array();

  $vocabulary = taxonomy_vocabulary_load($form_state['values']['vid']);
  // Add Translation mode for vocabulary if Multilingual options enabled for taxonomy.
  if (module_exists('i18ntaxonomy')) {
    $vocabulary->i18nmode = i18ntaxonomy_vocabulary($form_state['values']['vid']);
  }
  // TODO: Check for failure here.
  // Add machine name to the vocabulary
  taxonomy_export_set_machine_name($vocabulary);

  $taxonomy_export = taxonomy_export_vocabulary_load($vocabulary->machine_name, $form_state['values']['include_terms']);

  $export  = "<?php\n";
  $export .= "// Generated by taxonomy_export " . TAXONOMY_EXPORT_VERSION . "\n\n";
  $export .= _taxonomy_export_export($taxonomy_export, '');

  if ($form_state['values']['as_file']) {
    // Set headers to make this a file attachment download
    drupal_set_header('Content-type: text/plain');
    drupal_set_header('Content-Disposition: attachment; filename="' . $vocabulary->machine_name . '.taxonomy_export.inc"');

    // Print the export, and immediately exit
    echo $export;
    module_invoke_all('exit');
    exit;
  }
  else {
    $form_state['storage']['taxonomy_export'] = $export;
  }
}

/**
 * FAPI callback: Displays a form allowing the admin to import vocabulary
 * definitions.
 **/
function taxonomy_export_import($form_state) {
  $form = array();

  $form['import_data'] = array(
    '#type' => 'textarea',
    '#title' => t('Taxonomy import data'),
    '#cols' => 80,
    '#rows' => 30,
    '#default_value' => $form_state['values']['import'],
    '#description' => t('Paste string from a Taxonomy Export dump.'),
    '#required' => TRUE,
  );
  $form['import'] = array(
    '#type' => 'submit',
    '#value' => t('Import'),
  );

  return $form;
}

/**
 * FAPI validation handler for taxonomy_export_import().
 **/
function taxonomy_export_import_validate($form, &$form_state) {
  if (!strstr($form_state['values']['import_data'], '$taxonomy_export = ')) {
    form_set_error('import_data', t('Could not parse import data.'));
  }
  // Clean off any leading php tags
  else if (substr($form_state['values']['import_data'], 0, 5) == '<?php') {
    $form_state['values']['import_data'] = substr($form_state['values']['import_data'], 5);
  }
}

/**
 * FAPI submit handler for taxonomy_export_import().
 **/
function taxonomy_export_import_submit($form, &$form_state) {
  // Suppress errors incase the import fails.  The eval should instantiate the
  // $taxonomy_export variable, if everything happens correctly.
  $taxonomy_export = '';
  ob_start();
  eval($form_state['values']['import_data']);
  ob_end_clean();

  if (isset($taxonomy_export)) {
    // Cast taxonomy_export from array to object for backwards compatibility
    // with taxonomy_export v1
    $taxonomy_export = (object) $taxonomy_export;

    if (!$taxonomy_export->machine_name) {
      taxonomy_export_set_machine_name($taxonomy_export->vocabulary);
      $taxonomy_export->machine_name = $taxonomy_export->vocabulary->machine_name;
    }
  }
  else {
    $taxonomy_export = FALSE;
  }

  if (!$taxonomy_export || !$taxonomy_export->vocabulary || !$taxonomy_export->machine_name) {
    drupal_set_message(t("Error parsing import data."), 'error');
    return;
  }

  $result = _taxonomy_export_import($taxonomy_export);
  if ($result === FALSE) {
    drupal_set_message(t("Error importing vocabulary '%name'.", array('%name' => $taxonomy_export->vocabulary->name)), 'error');
  }
  else {
    drupal_set_message(t("Vocabulary '%name' imported successfully.", array('%name' => $taxonomy_export->vocabulary->name)));
    if (is_numeric($result)) {
      drupal_set_message(t("%num terms imported successfully.", array('%num' => $result)));
    }
  }
}

